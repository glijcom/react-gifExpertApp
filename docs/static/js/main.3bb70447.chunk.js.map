{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAiCeA,EA7BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAiBrC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAGGJ,EAAWK,OAAOC,OAAS,GAC5BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,QAKhD,SACG,uBAAOC,KAAK,OAAOC,MAAOT,EAAYU,SAfnB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAciDG,YAAY,+B,+BCvB/EC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAYD,EAAIC,GAChBC,MAAYF,EAAIE,MAChBV,IAAYQ,EAAIG,OAAOC,iBAAiBZ,QAV7B,kBAcZM,GAdY,4CAAH,sDCYLO,EAVK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE9B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCqBFO,EAvBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFN,SAAEA,GAAe,IAAD,EACdf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAsBxC,OAhBAC,qBAAU,WACNxB,EAASC,GACJwB,MAAM,SAAAC,GACHC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,WAKZ,CAAEpB,IAGEqB,EDlByBM,CAAc3B,GAAjCa,EAFiB,EAEtBN,KAAaa,EAFS,EAETA,QAGrB,OACI,qCACA,mCAAOpB,KACDoB,GAAW,4CACb,qBAAKJ,UAAU,YAAf,SAGYH,EAAOJ,KAAK,SAAAC,GAAG,OAEX,aADA,CACC,EAAD,eAA+BA,GAAbA,EAAIC,aEenCiB,EA7BM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,cAFvB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAUvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAMrBS,EAAWgB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,U,MCpBtC6B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.3bb70447.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        //console.log('Submit Hecho');\n        \n        if ( inputValue.trim().length > 2){\n            setCategories(categories => [inputValue, ...categories]);\n        }\n        \n    }\n    return (\n        <form onSubmit={ handleSubmit }>\n           <input type=\"text\" value={inputValue} onChange={ handleInputChange } placeholder=\"Agrega una categorÃ­a\" />\n        </form>\n    )\n}\n\n//document.querySelector(\"input\").focus();\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","export const getGifs = async(category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=MR3yFVeUkcRqDB0m5c106967az7fkk1Z`;\n    const resp = await fetch( url )\n    const {data} = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id:         img.id,\n            title:      img.title,\n            url:        img.images.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}\n","import React from 'react'\n\nconst GifGridItem = ( {id, title, url} ) => {\n    \n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{ title }</p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n\n    const { data:images, loading }= useFetchGifs( category );\n\n\n    return (\n        <>\n        <h3> { category }</h3>\n            { loading && <p>Cargando...</p> }\n            <div className=\"card-grid\">\n\n                    {\n                        images.map( img => (\n                            //<li key={ id }>{ title }</li>\n                            <GifGridItem key={img.id} { ...img } />\n                        ))\n                    }\n\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    })\n\n    useEffect(() => {\n        getGifs( category)\n            .then( imgs => {\n                setTimeout(() => {\n                    setState({\n                        data: imgs,\n                        loading: false\n                    })\n                }, 1500);\n            }\n                \n            )\n        \n    }, [ category ])\n\n\n    return state;\n}\n\n\n","import React, {useState} from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Daft Punk'])\n\n    // const handleAdd = () => {\n    //     //setCategories( [...categories, 'Gabriel']);\n    //     setCategories( ['Lijtenstein', ...categories]);\n\n    // }\n\n    return (\n        <>\n            <h1>GifExpertApp</h1>\n            <AddCategory setCategories={ setCategories } />\n\n            {/* <button onClick={ handleAdd }>Agregar elemento</button> */}\n            \n\n                { \n                    categories.map( category => (\n                        <GifGrid key={category} category={category} />\n                    )\n                    )\n                }\n\n        </>\n    )\n}\n\nexport default GifExpertApp\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}